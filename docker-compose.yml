services:

  postgres-db:
    image: postgres:15-alpine
    restart: always
    container_name: postgres-db
    environment:
      TZ: "Asia/Tashkent"
      PGTZ: "Asia/Tashkent"
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    command: postgres -c 'max_connections=1000'
    ports:
      - ${DB_PORT}:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    networks: [ "microservices" ]

  postgres-test-db:
    image: postgres:15-alpine
    restart: always
    container_name: postgres-test-db
    environment:
      TZ: "Asia/Tashkent"
      PGTZ: "Asia/Tashkent"
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_DB: ${TEST_DB_NAME}
    command: postgres -c 'max_connections=1000'
    ports:
      - ${TEST_DB_PORT}:5432
    volumes:
      - test-db-data:/var/lib/postgresql/data
    env_file:
      - .env
    networks: [ "microservices" ]

  app:
    build: .
    container_name: fastapi-app
    restart: always
    volumes:
      - .:/tournament
    ports:
      - "8000:8000"
    environment:
      MODE: ${MODE}

      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres-db
      DB_PORT: 5432

      TEST_DB_NAME: ${TEST_DB_NAME}
      TEST_DB_USER: ${TEST_DB_USER}
      TEST_DB_PASSWORD: ${TEST_DB_PASSWORD}
      TEST_DB_HOST: postgres-test-db
      TEST_DB_PORT: 5432
    depends_on:
      postgres-db:
        condition: "service_started"
      postgres-test-db:
        condition: "service_started"
    command: bash -c 'while !</dev/tcp/postgres-db/5432; do sleep 1; done; poetry install --no-root && poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000'
    env_file:
      - .env
    networks: [ "microservices" ]

networks:
  microservices:
    name: microservices
    driver: bridge

volumes:
  db-data:
  test-db-data: